/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
bool check(int * a, int * b){
    for (int i=0; i<26; i++){
        if (a[i] != b[i]) return 0;  
    }
    return 1;
}

int* findAnagrams(char * s, char * p, int* returnSize){
    int *hash = calloc(26, sizeof(int));
    int *com = calloc(26, sizeof(int));
    int size = 0;
    int i;
    *returnSize = 0;
    while (*p){
        hash[*p - 'a']++;
        size++;
        p++;
    }

    for (i=0; i<size; i++){
        if (! *(s + i)) return 0;
        com[*(s + i) - 'a']++;
    }
    int *ans = malloc(30000 * sizeof(int));
    int head = 0;

    if (check(com, hash)){
        ans[*returnSize] = head;
        *returnSize += 1;
    }

    while (*(s + i)){
        com[*(s + i) - 'a']++;
        com[*(s + head) - 'a']--;
        if (check(com, hash)){
            ans[*returnSize] = head + 1;
            (*returnSize) += 1;
        }
        head++;
        i++;
    }
    free(hash);
    free(com);
    return ans;
}
