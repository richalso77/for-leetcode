/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head)  return head;
        int count = 0;
        ListNode* last = head;
        ListNode* ans = head;

        while (last->next){
            last = last->next;
            count++;
        }
        last->next = head;
        printf("%d,%d", count, k);
        count += 1;
        k = k % count;
        count -= k;
        for (int i = 0; i < count - 1; i++){
            ans = ans->next;
        }
        ListNode* temp = ans;
        ans = ans->next;
        temp->next = 0;

        
        return ans;
    }
};
